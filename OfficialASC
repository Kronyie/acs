--// Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Event = ReplicatedStorage:WaitForChild("Event")

--// Variables
local wandEnabled = false
local attackSpeed = 0.3
local attackRange = 100
local walkSpeed = 50 -- default walkspeed (auto set)
local multiAttacks = 3
local lastAutoAttack = 0

local autoTeleportEnabled = true
local nearbyRadius = 150
local returnDelay = 5
local isTeleporting = false
local teleportCFrame = nil
local crystalCount = 0
local frozen = false
local noclipEnabled = false

-- Spider vars
local spiderState = "🟣"
local spiderTeleporting = false
local spiderDisappeared = false

-- Target mobs (priority)
local targetMobs = {
    ["royalSpiderModel"] = 1,
    ["sandManModel"] = 2,
    ["spiderModel"] = 3,
    ["crystalGuardianModel"] = 4,
    ["sandGeneralModel"] = 5,
    ["Sheds"] = 6,
    ["desertBossModel"] = 7
}

-- Colors for status label
local mobColors = {
    ["royalSpiderModel"] = Color3.fromRGB(255, 0, 0),
    ["spiderModel"] = Color3.fromRGB(200, 100, 100),
    ["crystalGuardianModel"] = Color3.fromRGB(0, 255, 0),
    ["crystalArcherModel"] = Color3.fromRGB(0, 200, 200),
    ["Sheds"] = Color3.fromRGB(200, 200, 100),
    ["spiderDen8183Sheds"] = Color3.fromRGB(150, 50, 255)
}

local ignoreList = {"SwordTroop", "ArcherTroop", "WizardTroop", "Mystical Bag"}

--// GUI Setup
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "SpiderGui"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 220, 0, 0)
MainFrame.Position = UDim2.new(0.5, -110, 0.5, -160)
MainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
MainFrame.BorderSizePixel = 0
MainFrame.Parent = ScreenGui
Instance.new("UICorner", MainFrame).CornerRadius = UDim.new(0, 10)
MainFrame.AutomaticSize = Enum.AutomaticSize.Y

local UIListLayout = Instance.new("UIListLayout", MainFrame)
UIListLayout.Padding = UDim.new(0, 6)
UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout.VerticalAlignment = Enum.VerticalAlignment.Top
Instance.new("UIPadding", MainFrame).PaddingTop = UDim.new(0, 10)

-- Wand Toggle Button
local ToggleButton = Instance.new("TextButton")
ToggleButton.Size = UDim2.new(0.9, 0, 0, 30)
ToggleButton.Text = "Toggle Wand: OFF"
ToggleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.Font = Enum.Font.GothamBold
ToggleButton.TextSize = 14
ToggleButton.Parent = MainFrame
Instance.new("UICorner", ToggleButton).CornerRadius = UDim.new(0, 6)

-- Input Row (Speed + Range + WalkSpeed)
local InputRow = Instance.new("Frame")
InputRow.Size = UDim2.new(0.9, 0, 0, 30)
InputRow.BackgroundTransparency = 1
InputRow.Parent = MainFrame
local InputLayout = Instance.new("UIListLayout", InputRow)
InputLayout.FillDirection = Enum.FillDirection.Horizontal
InputLayout.Padding = UDim.new(0, 5)

local SpeedBox = Instance.new("TextBox")
SpeedBox.Size = UDim2.new(0.33, -2, 1, 0)
SpeedBox.Text = tostring(attackSpeed)
SpeedBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
SpeedBox.TextColor3 = Color3.fromRGB(255, 255, 255)
SpeedBox.Font = Enum.Font.Gotham
SpeedBox.TextSize = 14
SpeedBox.Parent = InputRow
Instance.new("UICorner", SpeedBox).CornerRadius = UDim.new(0, 6)

local RangeBox = Instance.new("TextBox")
RangeBox.Size = UDim2.new(0.33, -2, 1, 0)
RangeBox.Text = tostring(attackRange)
RangeBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
RangeBox.TextColor3 = Color3.fromRGB(255, 255, 255)
RangeBox.Font = Enum.Font.Gotham
RangeBox.TextSize = 14
RangeBox.Parent = InputRow
Instance.new("UICorner", RangeBox).CornerRadius = UDim.new(0, 6)

-- NEW WalkSpeed Box
local WalkSpeedBox = Instance.new("TextBox")
WalkSpeedBox.Size = UDim2.new(0.33, -2, 1, 0)
WalkSpeedBox.Text = tostring(walkSpeed)
WalkSpeedBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
WalkSpeedBox.TextColor3 = Color3.fromRGB(255, 255, 255)
WalkSpeedBox.Font = Enum.Font.Gotham
WalkSpeedBox.TextSize = 14
WalkSpeedBox.Parent = InputRow
Instance.new("UICorner", WalkSpeedBox).CornerRadius = UDim.new(0, 6)

WalkSpeedBox.FocusLost:Connect(function(enterPressed)
    if not enterPressed then return end
    local val = tonumber(WalkSpeedBox.Text)
    if val and val > 0 then
        walkSpeed = val
        local char = LocalPlayer.Character
        local hum = char and char:FindFirstChildOfClass("Humanoid")
        if hum then hum.WalkSpeed = walkSpeed end
    end
end)

-- Auto-set WalkSpeed on execution
task.defer(function()
    local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local hum = char:WaitForChild("Humanoid")
    if hum then hum.WalkSpeed = walkSpeed end
end)

-- Status Labels
local StatusLabel = Instance.new("TextLabel")
StatusLabel.Size = UDim2.new(0.9, 0, 0, 20)
StatusLabel.BackgroundTransparency = 1
StatusLabel.Text = "Target: None"
StatusLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
StatusLabel.Font = Enum.Font.Gotham
StatusLabel.TextSize = 14
StatusLabel.Parent = MainFrame

local SpiderStatusLabel = Instance.new("TextLabel")
SpiderStatusLabel.Size = UDim2.new(0.9, 0, 0, 20)
SpiderStatusLabel.BackgroundTransparency = 1
SpiderStatusLabel.Text = "🕷️ 🟣"
SpiderStatusLabel.TextColor3 = Color3.fromRGB(170, 0, 255)
SpiderStatusLabel.Font = Enum.Font.Gotham
SpiderStatusLabel.TextSize = 16
SpiderStatusLabel.Parent = MainFrame

-- (rest of script continues unchanged...)


-- Teleport Button
local TPButton = Instance.new("TextButton")
TPButton.Size = UDim2.new(0.9, 0, 0, 25)
TPButton.Text = "Set Teleport Location"
TPButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
TPButton.TextColor3 = Color3.fromRGB(255, 255, 255)
TPButton.Font = Enum.Font.Gotham
TPButton.TextSize = 14
TPButton.Parent = MainFrame
Instance.new("UICorner", TPButton).CornerRadius = UDim.new(0, 6)

local StatusIndicator = Instance.new("Frame", MainFrame)
StatusIndicator.Size = UDim2.new(0, 20, 0, 20)
StatusIndicator.BackgroundColor3 = Color3.fromRGB(255,0,0)
StatusIndicator.BorderSizePixel = 0

local CountdownLabel = Instance.new("TextLabel", MainFrame)
CountdownLabel.Size = UDim2.new(0, 100, 0, 20)
CountdownLabel.BackgroundTransparency = 1
CountdownLabel.TextColor3 = Color3.fromRGB(255,255,255)
CountdownLabel.TextScaled = true
CountdownLabel.Text = "Timer: 0s"

-- Freeze Button
local FreezeButton = Instance.new("TextButton")
FreezeButton.Size = UDim2.new(0.9, 0, 0, 25)
FreezeButton.Text = "Freeze: OFF"
FreezeButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
FreezeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
FreezeButton.Font = Enum.Font.GothamBold
FreezeButton.TextSize = 14
FreezeButton.Parent = MainFrame
Instance.new("UICorner", FreezeButton).CornerRadius = UDim.new(0, 6)

-- Noclip Button
local NoclipButton = Instance.new("TextButton")
NoclipButton.Size = UDim2.new(0.9, 0, 0, 25)
NoclipButton.Text = "Noclip: OFF"
NoclipButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
NoclipButton.TextColor3 = Color3.fromRGB(255, 255, 255)
NoclipButton.Font = Enum.Font.GothamBold
NoclipButton.TextSize = 14
NoclipButton.Parent = MainFrame
Instance.new("UICorner", NoclipButton).CornerRadius = UDim.new(0, 6)

-- Exit Button
local ExitButton = Instance.new("TextButton")
ExitButton.Size = UDim2.new(0.9, 0, 0, 25)
ExitButton.Text = "Exit Script"
ExitButton.BackgroundColor3 = Color3.fromRGB(100, 0, 0)
ExitButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ExitButton.Font = Enum.Font.GothamBold
ExitButton.TextSize = 14
ExitButton.Parent = MainFrame
Instance.new("UICorner", ExitButton).CornerRadius = UDim.new(0, 6)

--// Draggable GUI
do
    local dragging, dragInput, mousePos, framePos
    MainFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            mousePos = input.Position
            framePos = MainFrame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then dragging = false end
            end)
        end
    end)
    MainFrame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then dragInput = input end
    end)
    RunService.RenderStepped:Connect(function()
        if dragging and dragInput then
            local delta = dragInput.Position - mousePos
            MainFrame.Position = UDim2.new(framePos.X.Scale, framePos.X.Offset + delta.X,
                                           framePos.Y.Scale, framePos.Y.Offset + delta.Y)
        end
    end)
end

--// Button Logic
ToggleButton.MouseButton1Click:Connect(function()
    wandEnabled = not wandEnabled
    ToggleButton.Text = "Toggle Wand: " .. (wandEnabled and "ON" or "OFF")
    ToggleButton.BackgroundColor3 = wandEnabled and Color3.fromRGB(0, 100, 0) or Color3.fromRGB(50, 50, 50)
end)

SpeedBox.FocusLost:Connect(function()
    local val = tonumber(SpeedBox.Text)
    if val and val >= 0.1 then attackSpeed = val end
end)

RangeBox.FocusLost:Connect(function()
    local val = tonumber(RangeBox.Text)
    if val and val > 0 then attackRange = val end
end)

TPButton.MouseButton1Click:Connect(function()
    local hrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if hrp then
        teleportCFrame = hrp.CFrame
        StatusIndicator.BackgroundColor3 = Color3.fromRGB(0,255,0)
        print("[AutoTP] Teleport location saved.")
    end
end)

FreezeButton.MouseButton1Click:Connect(function()
    frozen = not frozen
    FreezeButton.Text = "Freeze: " .. (frozen and "ON" or "OFF")
    FreezeButton.BackgroundColor3 = frozen and Color3.fromRGB(0,100,255) or Color3.fromRGB(50,50,50)
    local hrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    local hum = hrp and hrp.Parent:FindFirstChildOfClass("Humanoid")
    if hum then hum.WalkSpeed = frozen and 0 or 16; hum.JumpPower = frozen and 0 or 50 end
end)

NoclipButton.MouseButton1Click:Connect(function()
    noclipEnabled = not noclipEnabled
    NoclipButton.Text = "Noclip: " .. (noclipEnabled and "ON" or "OFF")
    NoclipButton.BackgroundColor3 = noclipEnabled and Color3.fromRGB(255,100,0) or Color3.fromRGB(50,50,50)
end)

ExitButton.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
    script:Destroy()
end)

--// Helper Functions
local function getHumanoidRootPart()
    local char = LocalPlayer.Character
    return char and char:FindFirstChild("HumanoidRootPart")
end

local function countNearbyGuardians(root, radius)
    local count = 0
    for _, m in ipairs(workspace:GetDescendants()) do
        if m:IsA("Model") and m.Name == "crystalGuardianModel" then
            local hrp = m:FindFirstChild("HumanoidRootPart")
            if hrp and (hrp.Position - root.Position).Magnitude <= radius then
                count += 1
                if count >= 5 then break end
            end
        end
    end
    return count
end

local function countNearbySpiders(root, radius)
    for _, m in ipairs(workspace:GetDescendants()) do
        if m:IsA("Model") and m.Name == "spiderModel" then
            local hrp = m:FindFirstChild("HumanoidRootPart")
            if hrp and (hrp.Position - root.Position).Magnitude <= radius then return true end
        end
    end
    return false
end

local function findTeleportCFrame()
    return teleportCFrame or CFrame.new(0,20,0)
end

--// Noclip Loop
RunService.RenderStepped:Connect(function()
    if noclipEnabled then
        local hrp = getHumanoidRootPart()
        if hrp then
            for _, part in ipairs(hrp.Parent:GetDescendants()) do
                if part:IsA("BasePart") and part.CanCollide then
                    part.CanCollide = false
                end
            end
        end
    end
end)

--// Spider Status Loop (with disappearance teleport)
task.spawn(function()
    while task.wait(1) do
        local hrp = getHumanoidRootPart()
        if not hrp then continue end

        local spiderNearby = countNearbySpiders(hrp, attackRange)

        if spiderNearby then
            spiderState = "🟢"
            SpiderStatusLabel.TextColor3 = Color3.fromRGB(0,255,0)
            spiderDisappeared = false
        elseif not spiderNearby and not spiderDisappeared then
            spiderState = "🔴"
            SpiderStatusLabel.TextColor3 = Color3.fromRGB(255,0,0)
            spiderDisappeared = true
            -- Teleport to saved location for 60s
            if teleportCFrame then
                local originalCF = hrp.CFrame
                hrp.Parent:PivotTo(teleportCFrame)
                SpiderStatusLabel.TextColor3 = Color3.fromRGB(170,0,255) -- purple while waiting
                for i = 60,1,-1 do
                    CountdownLabel.Text = "Timer: "..i.."s"
                    task.wait(1)
                end
                CountdownLabel.Text = "Timer: 0s"
                hrp.Parent:PivotTo(originalCF)
                SpiderStatusLabel.TextColor3 = Color3.fromRGB(170,0,255) -- purple again
            end
        end

        SpiderStatusLabel.Text = "🕷️ "..spiderState
    end
end)

--// Main Loop
task.spawn(function()
    while true do
        local hrp = getHumanoidRootPart()
        if hrp then
            -- Auto-Teleport (crystalGuardianModel)
            crystalCount = countNearbyGuardians(hrp, nearbyRadius)
            if crystalCount >= 5 and autoTeleportEnabled and not isTeleporting then
                isTeleporting = true
                local originalCF = hrp.CFrame
                hrp.Parent:PivotTo(findTeleportCFrame())
                local hum = hrp.Parent:FindFirstChildOfClass("Humanoid")
                local ws,jp
                if hum then ws,jp = hum.WalkSpeed,hum.JumpPower; hum.WalkSpeed,hum.JumpPower=0,0 end
                for i = returnDelay,1,-1 do
                    CountdownLabel.Text = "Timer: "..i.."s"
                    task.wait(1)
                end
                CountdownLabel.Text = "Timer: 0s"
                hrp.Parent:PivotTo(originalCF)
                if hum and not frozen then hum.WalkSpeed,hum.JumpPower = ws or 16, jp or 50 end
                isTeleporting = false
            end

            -- Wand Attack
            if wandEnabled then
                local mobs = {}
                local royalTarget = nil
                for _, obj in pairs(workspace:GetDescendants()) do
                    if obj:IsA("Model") and obj:FindFirstChild("HumanoidRootPart") then
                        if targetMobs[obj.Name] then
                            local ignored = false
                            for _, ignore in ipairs(ignoreList) do
                                if string.find(obj.Name, ignore) then ignored = true break end
                            end
                            if not ignored then
                                local dist = (obj.HumanoidRootPart.Position - hrp.Position).Magnitude
                                if dist < attackRange then
                                    table.insert(mobs,{model=obj,priority=targetMobs[obj.Name],dist=dist})
                                    if obj.Name=="royalSpiderModel" then royalTarget=obj end
                                end
                            end
                        end
                    end
                end

                local targetsToAttack = {}
                if royalTarget then
                    targetsToAttack = {{model=royalTarget}}
                else
                    table.sort(mobs,function(a,b)
                        if a.priority==b.priority then return a.dist<b.dist else return a.priority<b.priority end
                    end)
                    targetsToAttack = mobs
                end

                if #targetsToAttack>0 then
                    local topMob = targetsToAttack[1].model
                    StatusLabel.Text = "Target: "..topMob.Name
                    StatusLabel.TextColor3 = mobColors[topMob.Name] or Color3.fromRGB(255,255,255)
                    for _, mob in ipairs(targetsToAttack) do
                        for i=1,multiAttacks do
                            Event:FireServer("use","wand","place",mob.model.HumanoidRootPart.Position)
                        end
                    end
                else
                    local now = tick()
                    StatusLabel.Text = "Target: None"
                    StatusLabel.TextColor3 = Color3.fromRGB(255,255,0)
                    if now-lastAutoAttack>=5 then
                        lastAutoAttack=now
                        Event:FireServer("use","wand","place",hrp.Position + hrp.CFrame.LookVector*10)
                    end
                end
            else
                StatusLabel.Text = "Target: None"
                StatusLabel.TextColor3 = Color3.fromRGB(255,255,0)
            end
        end
        task.wait(attackSpeed)
    end
end)
